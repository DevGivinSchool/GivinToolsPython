# Generated by Django 3.1 on 2020-10-21 12:25

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200, verbose_name='Название')),
                ('text', models.TextField(verbose_name='Текст')),
            ],
            options={
                'verbose_name': 'Статья',
                'verbose_name_plural': 'Статьи',
            },
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'last_name',
                    models.CharField(blank=True, max_length=255, null=True, verbose_name='Фамилия по русски')),
                ('first_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Имя по русски')),
                ('fio', models.CharField(blank=True, db_index=True, max_length=500, null=True,
                                         verbose_name='Фамилия и Имя по русски')),
                ('email', models.CharField(blank=True, db_index=True, max_length=254, null=True, verbose_name='Email')),
                ('telegram',
                 models.CharField(blank=True, db_index=True, max_length=32, null=True, verbose_name='Telegram name')),
                ('time_begin', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('time_end',
                 models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Дата блокировки')),
                ('login', models.CharField(blank=True, max_length=100, null=True,
                                           verbose_name='Логин пользователя в домене @givinschool.org, соответствует почте')),
                ('password', models.CharField(blank=True, max_length=32, null=True, verbose_name='Пароль участника')),
                ('payment_date',
                 models.DateField(blank=True, default=datetime.date.today, null=True, verbose_name='Дата оплаты')),
                ('number_of_days',
                 models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Количество оплаченных дней')),
                ('deadline', models.DateField(blank=True, null=True, verbose_name='Дата следующей оплаты')),
                ('comment', models.CharField(blank=True, max_length=4000, null=True, verbose_name='Комментарий')),
                ('until_date', models.DateField(blank=True, null=True, verbose_name='Дата до которой отсрочен платёж')),
                ('type', models.CharField(choices=[('N', 'новый участник (первый месяц)'), ('P', 'регулярный участник'),
                                                   ('B', 'заблокированный'), ('E', 'наш сотрудник'),
                                                   ('V', 'VIP (особые условия, например, участие без оплаты)')],
                                          default='N', max_length=1,
                                          verbose_name='Тип участника: '
                                                       'N - новый участник (первый месяц); '
                                                       'P - регулярный участник; '
                                                       'B - заблокированный; '
                                                       'E - наш сотрудник; '
                                                       'V - VIP (особые условия, например, участие без оплаты)')),
                ('last_name_eng',
                 models.CharField(blank=True, max_length=255, null=True, verbose_name='Фамилия по английски')),
                ('first_name_eng',
                 models.CharField(blank=True, max_length=255, null=True, verbose_name='Имя по английски')),
                ('fio_eng', models.CharField(blank=True, db_index=True, max_length=500, null=True,
                                             verbose_name='Фамилия и Имя по английски')),
                ('date_until_date', models.DateField(blank=True, null=True, verbose_name='Дата выдачи отсрочки')),
                ('telegram_id', models.BigIntegerField(blank=True, null=True, verbose_name='Telegram id')),
            ],
            options={
                'verbose_name': 'Участник',
                'verbose_name_plural': 'Участники',
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_begin', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время начала сессии')),
                ('time_end', models.DateTimeField(null=True, verbose_name='Дата и время окончания сессии')),
                ('log_file', models.CharField(max_length=4000, null=True, verbose_name='Путь к лог-файлу')),
            ],
            options={
                'verbose_name': 'Сеанс',
                'verbose_name_plural': 'Сеансы',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_begin', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время начала задания')),
                ('time_end', models.DateTimeField(null=True, verbose_name='Дата и время окончания задания')),
                ('task_from', models.CharField(max_length=254, null=True, verbose_name='От кого (email)')),
                ('task_subject', models.CharField(max_length=2000, null=True, verbose_name='Тема (email)')),
                ('task_body_type',
                 models.CharField(max_length=4, null=True, verbose_name='Типа тела письма (TEXT;HTML;MIX)')),
                ('task_body_html', models.TextField(null=True, verbose_name='Тело письма HTML')),
                ('task_body_text', models.TextField(null=True, verbose_name='Тело письма TEXT')),
                ('task_error', models.CharField(max_length=4000, null=True, verbose_name='Сообщение об ошибке')),
                ('number_of_attempts', models.PositiveSmallIntegerField(null=True, verbose_name='Количество попыток')),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sf.participant')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sf.session')),
            ],
            options={
                'verbose_name': 'Задание',
                'verbose_name_plural': 'Задания',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_service',
                 models.CharField(max_length=255, null=True, verbose_name='Наименование услуги (как в письме)')),
                ('payment_id', models.CharField(max_length=10, null=True, verbose_name='ID платежа (как в письме)')),
                ('amount', models.PositiveSmallIntegerField(null=True, verbose_name='Сумма платежа')),
                ('sales_slip',
                 models.CharField(max_length=500, null=True, verbose_name='Кассовый чек 54-ФЗ (ссылка на него)')),
                ('card_number',
                 models.CharField(max_length=20, null=True, verbose_name='Номер кредитной карты плательщика')),
                ('card_type',
                 models.CharField(max_length=10, null=True, verbose_name='Тип кредитной карты плательщика')),
                ('payment_purpose', models.CharField(choices=[('ДШ', 'Друзья Школы')], default='ДШ', max_length=2,
                                                     verbose_name='Назначение платежа')),
                ('last_name', models.CharField(max_length=255, null=True, verbose_name='Фамилия по русски')),
                ('first_name', models.CharField(max_length=255, null=True, verbose_name='Имя по русски')),
                ('fio',
                 models.CharField(db_index=True, max_length=500, null=True, verbose_name='Фамилия и Имя по русски')),
                ('email', models.CharField(db_index=True, max_length=254, null=True, verbose_name='Email')),
                ('telegram', models.CharField(db_index=True, max_length=32, null=True, verbose_name='Telegram name')),
                ('time_create', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('payment_system',
                 models.CharField(choices=[('GC', 'GetCourse'), ('PK', 'PayKeeper')], default='GC', max_length=2,
                                  verbose_name='Платёжная система')),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sf.participant')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sf.task')),
            ],
            options={
                'verbose_name': 'Платеж',
                'verbose_name_plural': 'Платежи',
            },
        ),
    ]
